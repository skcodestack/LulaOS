#ifndef __INTERRUPT_H__
#define __INTERRUPT_H__

/*
    0-0x15     system used
    0x16-0x1f  reserved for system
    0x20-0xff  hardware interrupt,0x80 for system call
*/

// system default exception code
#define FAULT_DIVISTION_ERROR_CODE 0x0
#define TRAP_DEBUG_CODE 0x1
#define INTN_NMI_CODE 0x2
#define TRAP_BREAKPOINT_CODE 0x3
#define TRAP_OVERFLOW_CODE 0x4
#define FAULT_OUT_OF_BOUND_CODE 0x5
#define FAULT_INVALID_OPCODE_CODE 0x6
#define FAULT_NO_MATH_CODE 0x7
#define ABORT_DOUBLE_FAULT_CODE 0x8
#define FAULT_COPROCESSOR_SEGMENT_OVERRUN_CODE 0x9
#define FAULT_INVALID_TSS_CODE 0xA
#define FAULT_SEGMENT_NOT_PRESENT_CODE 0xB
#define FAULT_STACK_SEGMENT_FAULT_CODE 0xC
#define FAULT_GENERAL_PROTECTION_CODE 0xD
#define FAULT_PAGE_FAULT_CODE 0xE
#define FAULT_RESERVED_CODE 0xF
#define FAULT_X87_FPU_FP_ERROR_CODE 0x10
#define FAULT_ALIGNMENT_CHECK_CODE 0x11
#define ABORT_MACHINE_CHECK_CODE 0x12
#define FAULT_SIMD_FP_EXCEPTION_CODE 0x13
#define FAULT_VIRTUALIZATION_EXCEPTION_CODE 0x14
#define FAULT_CONTROL_PROTECTION_EXCEPTION_CODE 0x15



void _init_interrupts();


#endif